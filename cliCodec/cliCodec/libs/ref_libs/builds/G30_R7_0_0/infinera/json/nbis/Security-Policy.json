{
    "secure_mode": {
        "type": {
            "ptype": "bool"
        },
        "description": "If enabled, non-secure protocols are not supported.\nIf disabled, non-secure protocols can be used, including:\n- HTTP protocol for file transfer, REST API, or any other HTTP based application\n- FTP protocol for file transfer\n- SNMPv2c or SNMPv3 without encryption\n\nEnabling secure-mode will be rejected if any non-secure protocol is in use.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": true,
        "hardcode": false,
        "argName": "secure_mode"
    },
    "strict_password_check": {
        "type": {
            "ptype": "bool"
        },
        "description": "If enabled, ensures the strict password complexity rules. Including:\n- minimum length of 8 characters (by default, configurable via the minimum-password-length policy)\n- at least one lower case letter (a-z)\n- at least one upper case letter (A-Z)\n- at least one number (0-9)\n- at least one symbol ()\n- user name cannot be part of the password\nIf disabled, all these rules are not enforced, except:\n- minimum length is 1 character (by default, configurable via the minimum-password-length policy)\nOnce enabled, this policy only has impact on newly defined passwords.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": true,
        "hardcode": false,
        "argName": "strict_password_check"
    },
    "minimum_password_length": {
        "type": {
            "ptype": "int"
        },
        "description": "Configurable minimum length for user passwords. When a password is changed, the password length will be verified according with this policy.\nNote that changing this policy will not have impact on already set passwords, only on newly set passwords.\nThe default value will depend on whether the policy strict-password-check is enabled or not (min length is 8 if enabled, 1 if disabled),\nbut the user is able to override this value by editing this policy manually.\nNote: this policy can only be enforced when the password is provided in a non-hashed way.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": 8,
        "hardcode": false,
        "argName": "minimum_password_length"
    },
    "ssh_authentication_method": {
        "type": {
            "ptype": "str",
            "values": [
                "password",
                "public-key"
            ]
        },
        "description": "The method used to authenticate user for SSH access.\nNote: For two-factor authentication, use public-key method and employ PIN/password-protected hardware device (e.g.: smart card or USB token.)",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "password",
        "hardcode": false,
        "argName": "ssh_authentication_method"
    },
    "enforce_password_history_check": {
        "type": {
            "ptype": "bool"
        },
        "description": "If enabled, ensures that a new password being set cannot match any of the previous N passwords\nfor the user. N is configurable through password-history-size.\nIf disabled, password repetition is allowed.\nOnce enabled, this policy only has impact on newly defined passwords.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": true,
        "hardcode": false,
        "argName": "enforce_password_history_check"
    },
    "password_history_size": {
        "type": {
            "ptype": "int"
        },
        "description": "The number of passwords to store for password reuse checking.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": 5,
        "hardcode": false,
        "argName": "password_history_size"
    },
    "aaa_authentication_method": {
        "type": {
            "ptype": "str",
            "values": [
                "local-only",
                "local-first-then-remote",
                "remote-first-then-local",
                "remote-unavailable-then-local"
            ]
        },
        "description": "Specify authentication method for the user login to the NE.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "local-only",
        "hardcode": false,
        "argName": "aaa_authentication_method"
    },
    "aaa_authorization_method": {
        "type": {
            "ptype": "str",
            "values": [
                "local-only",
                "remote-if-authenticated-else-local",
                "remote-unavailable-then-local"
            ]
        },
        "description": "Specify authorization policy for the logged user. If the user changes this parameter, it should logout and login again to apply the rules.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "local-only",
        "hardcode": false,
        "argName": "aaa_authorization_method"
    },
    "ssh_strict_host_key_checking": {
        "type": {
            "ptype": "str",
            "values": [
                "strict",
                "relaxed"
            ]
        },
        "description": "Specify the strictness of remote ssh/sftp/scp host identity checking.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "relaxed",
        "hardcode": false,
        "argName": "ssh_strict_host_key_checking"
    },
    "ssh_key_aging_interval": {
        "type": {
            "ptype": "int"
        },
        "description": "This policy defines the ssh-authorized-keys aging interval. Setting the value to 0 disables ssh-authorized-keys aging.\nThis affects the expiration date of all ssh-authorized-keys. Once aging is enabled, the expiration date is calculated\nfrom current time, for previously configured keys, and from configuration time, for newly configured keys.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": 0,
        "hardcode": false,
        "argName": "ssh_key_aging_interval"
    },
    "root_password": {
        "type": {
            "ptype": "str"
        },
        "description": "The password of the root user.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "",
        "hardcode": false,
        "argName": "root_password"
    },
    "console_user_password": {
        "type": {
            "ptype": "str"
        },
        "description": "The password of the console-user.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "",
        "hardcode": false,
        "argName": "console_user_password"
    },
    "console_user_enabled": {
        "type": {
            "ptype": "bool"
        },
        "description": "A switch to enable/disable console-user.\nThe console-user account is an emergency account that is only usable through the serial console.\nDisabling this account may put the device in a position where recovery is not possible,\nso it is recommended to keep this account enabled.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": true,
        "hardcode": false,
        "argName": "console_user_enabled"
    },
    "csp_symmetrical_key": {
        "type": {
            "ptype": "str"
        },
        "description": "Critical Security Parameters symmetrical key.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "",
        "hardcode": false,
        "argName": "csp_symmetrical_key"
    },
    "disable_user_lockout": {
        "type": {
            "ptype": "bool"
        },
        "description": "This policy allows to enable/disable user lockout when multiple invalid logins are detected.\nThe number of invalid logins that trigger the lockout is configurable at the individual user level with the max-invalid-logins parameter.\nThe time the user is locked-out is also configurable at user level with the suspension-time parameter.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": false,
        "hardcode": false,
        "argName": "disable_user_lockout"
    },
    "supported_tls_version": {
        "type": {
            "ptype": "str",
            "values": [
                "1.2-only",
                "1.3-only",
                "1.3-with-fallback-to-1.2"
            ]
        },
        "description": "Transport Layer Security (TLS) supported version(s). Changing this attribute will not affect existing connections.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "1.2-only",
        "hardcode": false,
        "argName": "supported_tls_version"
    },
    "crl_based_revocation": {
        "type": {
            "ptype": "bool"
        },
        "description": "This policy allows to enable/disable CRL-based certificate revocation.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": false,
        "hardcode": false,
        "argName": "crl_based_revocation"
    },
    "crl_download_timeout": {
        "type": {
            "ptype": "int"
        },
        "description": "Specifies the maximum time to wait (in seconds) for automatic CRL downloads.\nNote: This timeout does not apply to manual CRL downloads.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": 15,
        "hardcode": false,
        "argName": "crl_download_timeout"
    },
    "ocsp_based_revocation": {
        "type": {
            "ptype": "bool"
        },
        "description": "This policy defines whether OCSP responders can be consulted for certificate revocation checking.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": false,
        "hardcode": false,
        "argName": "ocsp_based_revocation"
    },
    "default_user_group": {
        "type": {
            "ptype": "unknown",
            "leafref": "../../user-group/name"
        },
        "description": "Default roles for users access.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "",
        "hardcode": false,
        "argName": "default_user_group"
    },
    "ssh_ciphers": {
        "type": {
            "ptype": "str",
            "values": [
                "aes128-ctr",
                "aes192-ctr",
                "aes256-ctr",
                "aes128-gcm-at-openssh-com",
                "aes256-gcm-at-openssh-com",
                "chacha20-poly1305-at-openssh-com",
                "aes128-cbc",
                "aes256-cbc"
            ]
        },
        "description": "Allowed symmetric ciphers for SSH.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "",
        "hardcode": false,
        "argName": "ssh_ciphers"
    },
    "ssh_macs": {
        "type": {
            "ptype": "str",
            "values": [
                "hmac-sha2-256",
                "hmac-sha2-512",
                "hmac-sha2-256-etm-at-openssh-com",
                "hmac-sha2-512-etm-at-openssh-com",
                "hmac-sha1",
                "hmac-sha1-96",
                "hmac-sha1-etm-at-openssh-com",
                "hmac-sha1-96-etm-at-openssh-com"
            ]
        },
        "description": "Allowed message authentication code algorithms for SSH.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "",
        "hardcode": false,
        "argName": "ssh_macs"
    },
    "ssh_key_exchanges": {
        "type": {
            "ptype": "str",
            "values": [
                "diffie-hellman-group-exchange-sha256",
                "ecdh-sha2-nistp256",
                "ecdh-sha2-nistp384",
                "ecdh-sha2-nistp521",
                "diffie-hellman-group14-sha1",
                "diffie-hellman-group-exchange-sha1",
                "diffie-hellman-group14-sha256"
            ]
        },
        "description": "Allowed key exchange algorithms for SSH.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "",
        "hardcode": false,
        "argName": "ssh_key_exchanges"
    },
    "ssh_host_key_algorithms": {
        "type": {
            "ptype": "str",
            "values": [
                "ssh-rsa",
                "rsa-sha2-256",
                "rsa-sha2-512",
                "ecdsa-sha2-nistp256",
                "ecdsa-sha2-nistp384",
                "ecdsa-sha2-nistp521"
            ]
        },
        "description": "Allowed host key algorithms for SSH.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "",
        "hardcode": false,
        "argName": "ssh_host_key_algorithms"
    },
    "ssh_public_key_algorithms": {
        "type": {
            "ptype": "str",
            "values": [
                "ssh-rsa",
                "rsa-sha2-256",
                "rsa-sha2-512",
                "ecdsa-sha2-nistp256",
                "ecdsa-sha2-nistp384",
                "ecdsa-sha2-nistp521"
            ]
        },
        "description": "Allowed public key algorithms for SSH.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "",
        "hardcode": false,
        "argName": "ssh_public_key_algorithms"
    },
    "tls_1_2_cipher_suites": {
        "type": {
            "ptype": "str",
            "values": [
                "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256",
                "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
                "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256",
                "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
                "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
                "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
                "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
                "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
                "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                "TLS_RSA_WITH_AES_128_CBC_SHA256",
                "TLS_RSA_WITH_AES_128_GCM_SHA256",
                "TLS_RSA_WITH_AES_256_CBC_SHA256",
                "TLS_RSA_WITH_AES_256_GCM_SHA384"
            ]
        },
        "description": "Supported TLS 1.2 cipher suites. Changing this attribute will not affect existing connections.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "",
        "hardcode": false,
        "argName": "tls_1_2_cipher_suites"
    },
    "tls_1_3_cipher_suites": {
        "type": {
            "ptype": "str",
            "values": [
                "TLS_AES_128_GCM_SHA256",
                "TLS_AES_256_GCM_SHA384",
                "TLS_CHACHA20_POLY1305_SHA256",
                "TLS_AES_128_CCM_SHA256",
                "TLS_AES_128_CCM_8_SHA256"
            ]
        },
        "description": "Supported TLS 1.3 cipher suites. Changing this attribute will not affect existing connections.\nTLS_CHACHA20_POLY1305_SHA256 note:\nIf present and requested by the client, it will be prioritized regardless of cipher-suite order.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "",
        "hardcode": false,
        "argName": "tls_1_3_cipher_suites"
    },
    "tls_curves": {
        "type": {
            "ptype": "str",
            "values": [
                "secp256r1",
                "secp384r1",
                "secp521r1",
                "x25519",
                "x448"
            ]
        },
        "description": "Supported elliptic curve algorithms.\nThe tls-curve algorithm affects both key-exchange and authentication stages of TLS handshake.\nChanging this attribute will not affect existing connections.\nApplies to both TLS 1.2 and 1.3.\nNOTE: Restricting curves can cause interoperability issues.\nTLS 1.2 remark: if the configured curve is not sent by the client, handshake may fail.\nTLS 1.3 remark: for the Authentication stage, it is possible that the server\nselects another curve different from the certificate signing algorithm.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "",
        "hardcode": false,
        "argName": "tls_curves"
    },
    "db_passphrase": {
        "type": {
            "ptype": "str"
        },
        "description": "Passphrase used for encrypting and decrypting DB snapshots.\nFor each command associated with DB snapshots (backup, restore, etc),\nthis db-passphrase will be used, except when it is directly provided in each command.\nAutomatic DB snapshots will not be enabled until this parameter is set.",
        "mandatory": false,
        "key": false,
        "config": true,
        "default": "",
        "hardcode": false,
        "argName": "db_passphrase"
    }
}