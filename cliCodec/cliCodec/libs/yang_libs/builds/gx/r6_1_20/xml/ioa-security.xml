<?xml version="1.0" encoding="UTF-8"?>
<module name="ioa-security"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:ioa-sec="http://infinera.com/yang/ioa/security"
        xmlns:yang="urn:ietf:params:xml:ns:yang:ietf-yang-types"
        xmlns:inet="urn:ietf:params:xml:ns:yang:ietf-inet-types"
        xmlns:ioa-common="http://infinera.com/yang/ioa/common"
        xmlns:ioa-image-key="http://infinera.com/yang/ioa/keys"
        xmlns:ioa-cert="http://infinera.com/yang/ioa/certificate">
  <namespace uri="http://infinera.com/yang/ioa/security"/>
  <prefix value="ioa-sec"/>
  <import module="ietf-yang-types">
    <prefix value="yang"/>
  </import>
  <import module="ietf-inet-types">
    <prefix value="inet"/>
  </import>
  <import module="ioa-common">
    <prefix value="ioa-common"/>
  </import>
  <import module="ioa-image-key">
    <prefix value="ioa-image-key"/>
  </import>
  <import module="ioa-certificate">
    <prefix value="ioa-cert"/>
  </import>
  <import module="ioa-ikev2">
    <prefix value="ioa-ike"/>
  </import>
  <organization>
    <text>Infinera</text>
  </organization>
  <contact>
    <text>Infinera Technical Support &lt;techsupport@infinera.com&gt;</text>
  </contact>
  <description>
    <text>IOA YANG module describing the Security model.</text>
  </description>
  <revision date="2023-03-31">
    <description>
      <text>YANG Models for Infinera Open API (IOA) for release R6.1</text>
    </description>
  </revision>
  <revision date="2022-10-31">
    <description>
      <text>YANG Models for Infinera Open API (IOA) for release R6.0</text>
    </description>
  </revision>
  <revision date="2022-06-30">
    <description>
      <text>YANG Models for Infinera Open API (IOA) for release R5.2</text>
    </description>
  </revision>
  <revision date="2022-02-28">
    <description>
      <text>YANG Models for Infinera Open API (IOA) for release R5.1</text>
    </description>
  </revision>
  <revision date="2021-12-10">
    <description>
      <text>YANG Models for Infinera Open API (IOA) for release R5.0</text>
    </description>
  </revision>
  <revision date="2021-09-17">
    <description>
      <text>YANG Models for Infinera Open API (IOA) for release R4.1</text>
    </description>
  </revision>
  <typedef name="ssh-key-algorithm">
    <type name="enumeration">
      <enum name="ssh-rsa">
        <value value="1"/>
        <description>
          <text>RSA key algorithm using SHA-1 hash.</text>
        </description>
      </enum>
      <enum name="rsa-sha2-256">
        <value value="2"/>
        <description>
          <text>RSA key algorithm using SHA-256 hash.</text>
        </description>
      </enum>
      <enum name="rsa-sha2-512">
        <value value="3"/>
        <description>
          <text>RSA key algorithm using SHA-512 hash.</text>
        </description>
      </enum>
      <enum name="ecdsa-sha2-nistp256">
        <value value="4"/>
        <description>
          <text>ECDSA key algorithm on the nistp256 curve using SHA-256 hash.</text>
        </description>
      </enum>
      <enum name="ecdsa-sha2-nistp384">
        <value value="5"/>
        <description>
          <text>ECDSA key algorithm on the nistp384 curve using SHA-384 hash.</text>
        </description>
      </enum>
      <enum name="ecdsa-sha2-nistp521">
        <value value="6"/>
        <description>
          <text>ECDSA key algorithm on the nistp521 curve using SHA-512 hash.</text>
        </description>
      </enum>
    </type>
    <description>
      <text>Key algorithms (and signatures) supported for SSH host keys and public keys.</text>
    </description>
  </typedef>
  <grouping name="security">
    <container name="security">
      <description>
        <text>Top level security container.</text>
      </description>
      <container name="security-policies">
        <description>
          <text>Container with several flags that represent security policies of the system.</text>
        </description>
        <leaf name="secure-mode">
          <type name="boolean"/>
          <default value="true"/>
          <description>
            <text>If enabled, non-secure protocols are not supported.
If disabled, non-secure protocols can be used, including:
- HTTP protocol for file transfer, REST API, or any other HTTP based application
- FTP protocol for file transfer
- SNMPv2c or SNMPv3 without encryption

Enabling secure-mode will be rejected if any non-secure protocol is in use.</text>
          </description>
        </leaf>
        <leaf name="strict-password-check">
          <type name="boolean"/>
          <default value="true"/>
          <description>
            <text>If enabled, ensures the strict password complexity rules. Including:
- minimum length of 8 characters
- at least one lower case letter (a-z)
- at least one upper case letter (A-Z)
- at least one number (0-9)
- at least one symbol ()
- user name cannot be part of the password
If disabled, all these rules are not enforced, except:
- minimum length is 1 character
Once enabled, this policy only has impact on newly defined passwords.</text>
          </description>
        </leaf>
        <leaf name="ssh-authentication-method">
          <type name="enumeration">
            <enum name="password">
              <value value="1"/>
              <description>
                <text>Use password-based authentication for SSH access.</text>
              </description>
            </enum>
            <enum name="public-key">
              <value value="2"/>
              <description>
                <text>Use public key authentication for SSH access.</text>
              </description>
            </enum>
          </type>
          <default value="password"/>
          <description>
            <text>The method used to authenticate user for SSH access.
Note: For two-factor authentication, use public-key method and employ PIN/password-protected hardware device (e.g.: smart card or USB token.)</text>
          </description>
        </leaf>
        <leaf-list name="default-user-group">
          <type name="leafref">
            <path value="../../user-group/name"/>
          </type>
          <max-elements value="10"/>
          <description>
            <text>Default roles for users access.</text>
          </description>
        </leaf-list>
        <leaf name="enforce-password-history-check">
          <type name="boolean"/>
          <default value="true"/>
          <description>
            <text>If enabled, ensures that a new password being set cannot match any of the previous 5 password
for the user.
If disabled, password repetition is allowed.
Once enabled, this policy only has impact on newly defined passwords.</text>
          </description>
        </leaf>
        <leaf name="aaa-authentication-method">
          <type name="enumeration">
            <enum name="local-only">
              <value value="1"/>
              <description>
                <text>Authentication locally only</text>
              </description>
            </enum>
            <enum name="local-first-then-remote">
              <value value="3"/>
              <description>
                <text>Authentication locally first, if not pass, then use remote AAA server</text>
              </description>
            </enum>
            <enum name="remote-first-then-local">
              <value value="4"/>
              <description>
                <text>Authentication use remote AAA server first, if remote authentication failed or all servers could not be contacted, then authenticate locally</text>
              </description>
            </enum>
            <enum name="remote-unavailable-then-local">
              <value value="5"/>
              <description>
                <text>Authentication use remote AAA server first, if all servers could not be contacted, then authenticate locally</text>
              </description>
            </enum>
          </type>
          <default value="local-only"/>
          <description>
            <text>Specify authentication method for the user login to the NE.</text>
          </description>
        </leaf>
        <leaf name="aaa-authorization-method">
          <type name="enumeration">
            <enum name="local-only">
              <value value="1"/>
              <description>
                <text>Authorization locally only.</text>
              </description>
            </enum>
            <enum name="remote-if-authenticated-else-local">
              <value value="2"/>
              <description>
                <text>Local users should follow local permissions and remote users should follow the remote ones.</text>
              </description>
            </enum>
            <enum name="remote-unavailable-then-local">
              <value value="3"/>
              <description>
                <text>All users (local or remote) should follow remote permissions. If the permissions return unavailable, then use local ones.</text>
              </description>
            </enum>
          </type>
          <default value="local-only"/>
          <description>
            <text>Specify authorization policy for the logged user. If the user changes this parameter, it should logout and login again to apply the rules.</text>
          </description>
        </leaf>
        <leaf name="ssh-strict-host-key-checking">
          <type name="enumeration">
            <enum name="strict">
              <value value="1"/>
              <description>
                <text>Only allow connection to a remote ssh/sftp/scp host if identity provided by remote host is known</text>
              </description>
            </enum>
            <enum name="relaxed">
              <value value="2"/>
              <description>
                <text>Allow connection to a remote ssh/sftp/scp host, regardless if identity provided by remote host is known</text>
              </description>
            </enum>
          </type>
          <default value="relaxed"/>
          <description>
            <text>Specify the strictness of remote ssh/sftp/scp host identity checking.</text>
          </description>
        </leaf>
        <leaf-list name="ssh-ciphers">
          <type name="enumeration">
            <enum name="aes128-ctr">
              <value value="1"/>
              <description>
                <text>Advanced Encryption Standard with 128-bit key in Counter mode.</text>
              </description>
            </enum>
            <enum name="aes192-ctr">
              <value value="2"/>
              <description>
                <text>Advanced Encryption Standard with 192-bit key in Counter mode.</text>
              </description>
            </enum>
            <enum name="aes256-ctr">
              <value value="3"/>
              <description>
                <text>Advanced Encryption Standard with 256-bit key in Counter mode.</text>
              </description>
            </enum>
            <enum name="aes128-gcm-at-openssh-com">
              <value value="4"/>
              <description>
                <text>Advanced Encryption Standard with 128-bit key in Galois/Counter mode.</text>
              </description>
            </enum>
            <enum name="aes256-gcm-at-openssh-com">
              <value value="5"/>
              <description>
                <text>Advanced Encryption Standard with 256-bit key in Galois/Counter mode.</text>
              </description>
            </enum>
            <enum name="chacha20-poly1305-at-openssh-com">
              <value value="6"/>
              <description>
                <text>ChaCha20 stream cipher and Poly1305 MAC.</text>
              </description>
            </enum>
            <enum name="aes128-cbc">
              <value value="7"/>
              <description>
                <text>Advanced Encryption Standard with 128-bit key in Cipher Block Chaining mode.</text>
              </description>
            </enum>
            <enum name="aes256-cbc">
              <value value="8"/>
              <description>
                <text>Advanced Encryption Standard with 256-bit key in Cipher Block Chaining mode.</text>
              </description>
            </enum>
          </type>
          <min-elements value="1"/>
          <max-elements value="20"/>
          <description>
            <text>Allowed symmetric ciphers for SSH.</text>
          </description>
        </leaf-list>
        <leaf-list name="ssh-macs">
          <type name="enumeration">
            <enum name="hmac-sha2-256">
              <value value="1"/>
              <description>
                <text>256-bit hash-based MAC using Secure Hash Algorithm-2.</text>
              </description>
            </enum>
            <enum name="hmac-sha2-512">
              <value value="2"/>
              <description>
                <text>512-bit hash-based MAC using Secure Hash Algorithm-2.</text>
              </description>
            </enum>
            <enum name="hmac-sha2-256-etm-at-openssh-com">
              <value value="3"/>
              <description>
                <text>256-bit Encrypt-then-MAC using Secure Hash Algorithm-2.</text>
              </description>
            </enum>
            <enum name="hmac-sha2-512-etm-at-openssh-com">
              <value value="4"/>
              <description>
                <text>512-bit Encrypt-then-MAC using Secure Hash Algorithm-2.</text>
              </description>
            </enum>
            <enum name="hmac-sha1">
              <value value="5"/>
              <description>
                <text>160-bit hash-based MAC using Secure Hash Algorithm-1.</text>
              </description>
            </enum>
            <enum name="hmac-sha1-96">
              <value value="6"/>
              <description>
                <text>Truncated 160-bit hash-based MAC using Secure Hash Algorithm-1.</text>
              </description>
            </enum>
            <enum name="hmac-sha1-etm-at-openssh-com">
              <value value="7"/>
              <description>
                <text>160-bit Encrypt-then-MAC using Secure Hash Algorithm-1.</text>
              </description>
            </enum>
            <enum name="hmac-sha1-96-etm-at-openssh-com">
              <value value="8"/>
              <description>
                <text>Truncated 160-bit Encrypt-then-MAC using Secure Hash Algorithm-1.</text>
              </description>
            </enum>
          </type>
          <min-elements value="1"/>
          <max-elements value="20"/>
          <description>
            <text>Allowed message authentication code algorithms for SSH.</text>
          </description>
        </leaf-list>
        <leaf-list name="ssh-key-exchanges">
          <type name="enumeration">
            <enum name="diffie-hellman-group-exchange-sha256">
              <value value="1"/>
              <description>
                <text>Diffie-Hellman group exchange algorithm using Secure Hash Algorithm-2.</text>
              </description>
            </enum>
            <enum name="ecdh-sha2-nistp256">
              <value value="2"/>
              <description>
                <text>ECDH key exchange algorithm with ephemeral keys generated on the nistp256 curve using
Secure Hash Algorithm-2.</text>
              </description>
            </enum>
            <enum name="ecdh-sha2-nistp384">
              <value value="3"/>
              <description>
                <text>ECDH key exchange algorithm with ephemeral keys generated on the nistp384 curve using
Secure Hash Algorithm-2.</text>
              </description>
            </enum>
            <enum name="ecdh-sha2-nistp521">
              <value value="4"/>
              <description>
                <text>ECDH key exchange algorithm with ephemeral keys generated on the nistp521 curve using
Secure Hash Algorithm-2.</text>
              </description>
            </enum>
            <enum name="diffie-hellman-group14-sha1">
              <value value="5"/>
              <description>
                <text>Diffie-Hellman group 14 key exchange algorithm using Secure Hash Algorithm-1.</text>
              </description>
            </enum>
            <enum name="diffie-hellman-group-exchange-sha1">
              <value value="6"/>
              <description>
                <text>Diffie-Hellman group exchange algorithm using Secure Hash Algorithm-1.</text>
              </description>
            </enum>
          </type>
          <min-elements value="1"/>
          <max-elements value="20"/>
          <description>
            <text>Allowed key exchange algorithms for SSH.</text>
          </description>
        </leaf-list>
        <leaf-list name="ssh-host-key-algorithms">
          <type name="ssh-key-algorithm"/>
          <min-elements value="1"/>
          <max-elements value="20"/>
          <description>
            <text>Allowed host key algorithms for SSH.</text>
          </description>
        </leaf-list>
        <leaf-list name="ssh-public-key-algorithms">
          <type name="ssh-key-algorithm"/>
          <min-elements value="1"/>
          <max-elements value="20"/>
          <description>
            <text>Allowed public key algorithms for SSH.</text>
          </description>
        </leaf-list>
        <leaf name="root-password">
          <type name="ioa-common:password"/>
          <description>
            <text>The password of the root user.</text>
          </description>
        </leaf>
        <leaf name="console-user-password">
          <type name="ioa-common:password"/>
          <description>
            <text>The password of the console-user.</text>
          </description>
        </leaf>
        <leaf name="console-user-enabled">
          <type name="boolean"/>
          <default value="true"/>
          <description>
            <text>A switch to enable/disable console-user.
The console-user account is an emergency account that is only usable through the serial console.
Disabling this account may put the device in a position where recovery is not possible,
so it is recommended to keep this account enabled.</text>
          </description>
        </leaf>
        <leaf name="csp-symmetrical-key">
          <type name="ioa-common:password">
            <length value="1..32"/>
          </type>
          <description>
            <text>Critical Security Parameters symmetrical key.</text>
          </description>
        </leaf>
        <leaf name="max-system-sessions">
          <type name="uint8"/>
          <config value="false"/>
          <description>
            <text>The maximum number of management sessions that the system supports.
Note: session via serial console does not count against this maximum.</text>
          </description>
        </leaf>
        <leaf name="max-local-users">
          <type name="uint8"/>
          <config value="false"/>
          <description>
            <text>The maximum number of local users that can be configured in the system.</text>
          </description>
        </leaf>
        <leaf name="disable-user-lockout">
          <type name="boolean"/>
          <default value="false"/>
          <description>
            <text>This policy allows to enable/disable user lockout when multiple invalid logins are detected.
The number of invalid logins that trigger the lockout is configurable at the individual user level with the max-invalid-logins parameter.
The time the user is locked-out is also configurable at user level with the suspension-time parameter.</text>
          </description>
        </leaf>
        <uses name="ioa-common:db-passphrase"/>
        <leaf name="supported-tls-version">
          <type name="enumeration">
            <enum name="1.2-only">
              <value value="1"/>
              <description>
                <text>Use TLS version 1.2 only.</text>
              </description>
            </enum>
            <enum name="1.3-only">
              <value value="2"/>
              <description>
                <text>Use TLS version 1.3 only.</text>
              </description>
            </enum>
            <enum name="1.3-with-fallback-to-1.2">
              <value value="3"/>
              <description>
                <text>Try to use TLS version 1.3 but if it fails use version 1.2.</text>
              </description>
            </enum>
          </type>
          <default value="1.2-only"/>
          <description>
            <text>Transport Layer Security (TLS) supported version(s). Changing this attribute will not affect existing connections.</text>
          </description>
        </leaf>
        <leaf-list name="tls-1.2-cipher-suites">
          <type name="enumeration">
            <enum name="TLS_DHE_RSA_WITH_AES_128_CBC_SHA256">
              <value value="1"/>
              <description>
                <text>Diffie-Hellman Ephemeral,
Rivest Shamir Adleman algorithm,
Advanced Encryption Standard with 128-bit key in Cipher Block Chaining mode,
Secure Hash Algorithm 256.</text>
              </description>
            </enum>
            <enum name="TLS_DHE_RSA_WITH_AES_128_GCM_SHA256">
              <value value="2"/>
              <description>
                <text>Diffie-Hellman Ephemeral,
Rivest Shamir Adleman algorithm,
Advanced Encryption Standard with 128-bit key in Galois/Counter mode,
Secure Hash Algorithm 256.</text>
              </description>
            </enum>
            <enum name="TLS_DHE_RSA_WITH_AES_256_CBC_SHA256">
              <value value="3"/>
              <description>
                <text>Diffie-Hellman Ephemeral,
Rivest Shamir Adleman algorithm,
Advanced Encryption Standard with 256-bit key in Cipher Block Chaining mode,
Secure Hash Algorithm 256.</text>
              </description>
            </enum>
            <enum name="TLS_DHE_RSA_WITH_AES_256_GCM_SHA384">
              <value value="4"/>
              <description>
                <text>Diffie-Hellman Ephemeral,
Rivest Shamir Adleman algorithm,
Advanced Encryption Standard with 256-bit key in Galois/Counter mode,
Secure Hash Algorithm 384.</text>
              </description>
            </enum>
            <enum name="TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256">
              <value value="5"/>
              <description>
                <text>Elliptic Curve Diffie-Hellman Ephemeral,
Elliptic Curve Digital Signature Algorithm,
Advanced Encryption Standard with 128-bit key in Cipher Block Chaining mode,
Secure Hash Algorithm 256.</text>
              </description>
            </enum>
            <enum name="TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256">
              <value value="6"/>
              <description>
                <text>Elliptic Curve Diffie-Hellman Ephemeral,
Elliptic Curve Digital Signature Algorithm,
Advanced Encryption Standard with 128-bit key in Galois/Counter mode,
Secure Hash Algorithm 256.</text>
              </description>
            </enum>
            <enum name="TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384">
              <value value="7"/>
              <description>
                <text>Elliptic Curve Diffie-Hellman Ephemeral,
Elliptic Curve Digital Signature Algorithm,
Advanced Encryption Standard with 256-bit key in Cipher Block Chaining mode,
Secure Hash Algorithm 384.</text>
              </description>
            </enum>
            <enum name="TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384">
              <value value="8"/>
              <description>
                <text>Elliptic Curve Diffie-Hellman Ephemeral,
Elliptic Curve Digital Signature Algorithm,
Advanced Encryption Standard with 256-bit key in Galois/Counter mode,
Secure Hash Algorithm 384.</text>
              </description>
            </enum>
            <enum name="TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256">
              <value value="9"/>
              <description>
                <text>Elliptic Curve Diffie-Hellman Ephemeral,
Rivest Shamir Adleman algorithm,
Advanced Encryption Standard with 128-bit key in Cipher Block Chaining mode,
Secure Hash Algorithm 256.</text>
              </description>
            </enum>
            <enum name="TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256">
              <value value="10"/>
              <description>
                <text>Elliptic Curve Diffie-Hellman Ephemeral,
Rivest Shamir Adleman algorithm,
Advanced Encryption Standard with 128-bit key in Galois/Counter mode,
Secure Hash Algorithm 256.</text>
              </description>
            </enum>
            <enum name="TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384">
              <value value="11"/>
              <description>
                <text>Elliptic Curve Diffie-Hellman Ephemeral,
Rivest Shamir Adleman algorithm,
Advanced Encryption Standard with 256-bit key in Cipher Block Chaining mode,
Secure Hash Algorithm 384.</text>
              </description>
            </enum>
            <enum name="TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384">
              <value value="12"/>
              <description>
                <text>Elliptic Curve Diffie-Hellman Ephemeral,
Rivest Shamir Adleman algorithm,
Advanced Encryption Standard with 256-bit key in Galois/Counter mode,
Secure Hash Algorithm 384.</text>
              </description>
            </enum>
            <enum name="TLS_RSA_WITH_AES_128_CBC_SHA256">
              <value value="13"/>
              <status value="obsolete"/>
              <description>
                <text>Rivest Shamir Adleman algorithm,
Advanced Encryption Standard with 128-bit key in Cipher Block Chaining mode,
Secure Hash Algorithm 256.</text>
              </description>
            </enum>
            <enum name="TLS_RSA_WITH_AES_128_GCM_SHA256">
              <value value="14"/>
              <status value="obsolete"/>
              <description>
                <text>Rivest Shamir Adleman algorithm,
Advanced Encryption Standard with 128-bit key in Galois/Counter mode,
Secure Hash Algorithm 256.</text>
              </description>
            </enum>
            <enum name="TLS_RSA_WITH_AES_256_CBC_SHA256">
              <value value="15"/>
              <status value="obsolete"/>
              <description>
                <text>Rivest Shamir Adleman algorithm,
Advanced Encryption Standard with 256-bit key in Cipher Block Chaining mode,
Secure Hash Algorithm 256.</text>
              </description>
            </enum>
            <enum name="TLS_RSA_WITH_AES_256_GCM_SHA384">
              <value value="16"/>
              <status value="obsolete"/>
              <description>
                <text>Rivest Shamir Adleman algorithm,
Advanced Encryption Standard with 256-bit key in Galois/Counter mode,
Secure Hash Algorithm 384.</text>
              </description>
            </enum>
          </type>
          <min-elements value="1"/>
          <max-elements value="16"/>
          <ordered-by value="user"/>
          <description>
            <text>Supported TLS 1.2 cipher suites. Changing this attribute will not affect existing connections.</text>
          </description>
        </leaf-list>
        <leaf-list name="tls-1.3-cipher-suites">
          <type name="enumeration">
            <enum name="TLS_AES_128_GCM_SHA256">
              <value value="1"/>
              <description>
                <text>Advanced Encryption Standard with 128-bit key in Galois/Counter mode (Secure Hash Algorithm 256).</text>
              </description>
            </enum>
            <enum name="TLS_AES_256_GCM_SHA384">
              <value value="2"/>
              <description>
                <text>Advanced Encryption Standard with 256-bit key in Galois/Counter mode (Secure Hash Algorithm 384).</text>
              </description>
            </enum>
            <enum name="TLS_CHACHA20_POLY1305_SHA256">
              <value value="3"/>
              <description>
                <text>ChaCha stream cipher and Poly1305 authenticator (Secure Hash Algorithm 256).</text>
              </description>
            </enum>
            <enum name="TLS_AES_128_CCM_SHA256">
              <value value="4"/>
              <description>
                <text>Advanced Encryption Standard with 128-bit key in Counter with CBC-MAC mode (Secure Hash Algorithm 256).</text>
              </description>
            </enum>
            <enum name="TLS_AES_128_CCM_8_SHA256">
              <value value="5"/>
              <description>
                <text>Advanced Encryption Standard with 128-bit key in Counter with CBC-MAC mode with 8-Octet ICV (Secure Hash Algorithm 256).</text>
              </description>
            </enum>
          </type>
          <min-elements value="1"/>
          <ordered-by value="user"/>
          <description>
            <text>Supported TLS 1.3 cipher suites. Changing this attribute will not affect existing connections.
TLS_CHACHA20_POLY1305_SHA256 note:
If present and requested by the client, it will be prioritized regardless of cipher-suite order.</text>
          </description>
        </leaf-list>
        <leaf-list name="tls-curves">
          <type name="enumeration">
            <enum name="secp256r1">
              <value value="1"/>
              <description>
                <text>256-bit Elliptic-curve Diffie-Hellman using curve SECP256r1.</text>
              </description>
            </enum>
            <enum name="secp384r1">
              <value value="2"/>
              <description>
                <text>384-bit Elliptic-curve Diffie-Hellman using curve SECP384r1.</text>
              </description>
            </enum>
            <enum name="secp521r1">
              <value value="3"/>
              <description>
                <text>521-bit Elliptic-curve Diffie-Hellman using curve SECP521r1.</text>
              </description>
            </enum>
            <enum name="x25519">
              <value value="4"/>
              <description>
                <text>256-bit Elliptic-curve Diffie-Hellman using curve 25519.</text>
              </description>
            </enum>
            <enum name="x448">
              <value value="5"/>
              <description>
                <text>448-bit Elliptic-curve Diffie-Hellman using curve 448.</text>
              </description>
            </enum>
          </type>
          <min-elements value="1"/>
          <ordered-by value="user"/>
          <description>
            <text>Supported elliptic curve algorithms.
The tls-curve algorithm affects both key-exchange and authentication stages of TLS handshake.
Changing this attribute will not affect existing connections.
Applies to both TLS 1.2 and 1.3.
NOTE: Restricting curves can cause interoperability issues.
TLS 1.2 remark: if the configured curve is not sent by the client, handshake may fail.
TLS 1.3 remark: for the Authentication stage, it is possible that the server
selects another curve different from the certificate signing algorithm.</text>
          </description>
        </leaf-list>
        <leaf name="crl-based-revocation">
          <type name="boolean"/>
          <default value="false"/>
          <description>
            <text>This policy allows to enable/disable CRL-based certificate revocation.</text>
          </description>
        </leaf>
        <leaf name="crl-download-timeout">
          <type name="uint16">
            <range value="1..60"/>
          </type>
          <units name="seconds"/>
          <default value="15"/>
          <description>
            <text>Specifies the maximum time to wait (in seconds) for automatic CRL downloads.
Note: This timeout does not apply to manual CRL downloads.</text>
          </description>
        </leaf>
        <leaf name="ocsp-based-revocation">
          <type name="boolean"/>
          <default value="false"/>
          <description>
            <text>This policy defines whether OCSP responders can be consulted for certificate revocation checking.</text>
          </description>
        </leaf>
      </container>
      <list name="user">
        <key value="user-name"/>
        <description>
          <text>User details. Can represent both locally configured users, as well as temporary remote users.</text>
        </description>
        <leaf name="user-name">
          <type name="ioa-common:user-name"/>
          <description>
            <text>The name of the user.</text>
          </description>
        </leaf>
        <leaf name="password">
          <type name="ioa-common:password"/>
          <description>
            <text>The password of the user.</text>
          </description>
        </leaf>
        <leaf name="password-hashed">
          <type name="string">
            <length value="0..106"/>
          </type>
          <description>
            <text>Hashed password of the user. It is made of three mandatory fields,
where the dollar sign is the field separator. The structure is: $id$salt$encrypted
Only id 6 (SHA512) is supported. Salt minimum size is 2.
reference: https://www.man7.org/linux/man-pages/man3/crypt.3.html</text>
          </description>
        </leaf>
        <leaf-list name="user-group">
          <type name="leafref">
            <path value="../../user-group/name"/>
          </type>
          <max-elements value="10"/>
          <description>
            <text>Associated user groups for this user.</text>
          </description>
        </leaf-list>
        <leaf name="display-name">
          <type name="string">
            <length value="0..128"/>
          </type>
          <description>
            <text>The display name for this user.</text>
          </description>
        </leaf>
        <leaf name="max-invalid-login">
          <type name="uint8"/>
          <default value="5"/>
          <description>
            <text>This attribute is the maximum number of consecutive and invalid login attempts
before an account is suspended (lockedout). Zero disables escalation on login failure.</text>
          </description>
        </leaf>
        <leaf name="suspension-time">
          <type name="uint16">
            <range value="0..1440"/>
          </type>
          <units name="minutes"/>
          <default value="5"/>
          <description>
            <text>This attribute is the duration of UID suspension following consecutive invalid login attempts.
Setting the value to 0 disables this behavior.</text>
          </description>
        </leaf>
        <leaf name="timeout">
          <type name="uint16">
            <range value="0..1440"/>
          </type>
          <units name="minutes"/>
          <default value="60"/>
          <description>
            <text>This attribute is the Session Time Out Interval. If there are no messages between the user
and the NE over the Time Out interval, the session is logged off. Setting the value to 0 disables
this attribute (meaning the session will not time out).</text>
          </description>
        </leaf>
        <leaf name="password-aging-interval">
          <type name="uint16">
            <range value="0..365"/>
          </type>
          <units name="days"/>
          <default value="90"/>
          <description>
            <text>This attribute is the Password Aging Interval. Setting the value to 0 disables password aging.</text>
          </description>
        </leaf>
        <leaf name="password-expiration-date">
          <type name="yang:date-and-time"/>
          <config value="false"/>
          <description>
            <text>This attribute shows the password expiration date.</text>
          </description>
        </leaf>
        <leaf name="enabled">
          <type name="boolean"/>
          <default value="true"/>
          <description>
            <text>Enable switch for the user, allows admins to explicitly disable users.</text>
          </description>
        </leaf>
        <leaf name="user-status">
          <type name="enumeration">
            <enum name="enabled">
              <value value="1"/>
            </enum>
            <enum name="disabled">
              <value value="2"/>
            </enum>
            <enum name="password-aged">
              <value value="3"/>
            </enum>
            <enum name="lockout">
              <value value="4"/>
            </enum>
          </type>
          <default value="disabled"/>
          <config value="false"/>
          <description>
            <text>This attribute shows the user status.
User with status 'enabled' will have access to the system.
User with status 'disabled' not have access to the system.
User with status 'password-aged' will have access to the system but will be forced to change his password on first-time login.
User with status 'lockout' means the account is locked out due to unsuccessful login attempts.</text>
          </description>
        </leaf>
        <leaf name="force-password-change">
          <type name="boolean"/>
          <default value="false"/>
          <description>
            <text>Allows administrator to force user to change password on next login.</text>
          </description>
        </leaf>
        <leaf name="max-sessions">
          <type name="uint8">
            <range value="1..20"/>
          </type>
          <default value="10"/>
          <description>
            <text>This attribute specifies the maximum number of sessions allowed for this user.</text>
          </description>
        </leaf>
        <leaf name="last-login-date">
          <type name="yang:date-and-time"/>
          <default value="1970-01-01T00:00:00Z"/>
          <config value="false"/>
          <description>
            <text>The last login date/time of the user.</text>
          </description>
        </leaf>
        <leaf name="failed-logins">
          <type name="uint8"/>
          <default value="0"/>
          <config value="false"/>
          <description>
            <text>Number of previous failed logins. Resets to zero upon a successful login.</text>
          </description>
        </leaf>
        <leaf name="user-aaa-type">
          <type name="enumeration">
            <enum name="local">
              <value value="1"/>
              <description>
                <text>User is authenticated locally.</text>
              </description>
            </enum>
            <enum name="remote">
              <value value="2"/>
              <description>
                <text>User is authenticated through remote AAA server.</text>
              </description>
            </enum>
          </type>
          <default value="local"/>
          <config value="false"/>
          <description>
            <text>Indicates the authentication method of the user.</text>
          </description>
        </leaf>
        <uses name="ioa-common:arc"/>
        <uses name="ioa-common:label"/>
      </list>
      <list name="user-group">
        <key value="name"/>
        <description>
          <text>List of user groups, each one with its own access permissions.
Each user will be associated with a list of groups, and will derive its permissions from them.</text>
        </description>
        <leaf name="name">
          <type name="string">
            <length value="1..32"/>
          </type>
          <description>
            <text>Name of the group.</text>
          </description>
        </leaf>
        <leaf name="description">
          <type name="string">
            <length value="0..128"/>
          </type>
          <description>
            <text>Long description of the user group.</text>
          </description>
        </leaf>
      </list>
      <list name="session">
        <key value="session-id"/>
        <config value="false"/>
        <max-elements value="100"/>
        <description>
          <text>List of currently established management layer sessions.</text>
        </description>
        <leaf name="session-id">
          <type name="string"/>
          <description>
            <text>Specifies a unique identifier of the current session. It indicates the
IP address and transport layer port number associated with this session.
If the session is initiated from the serial port, the value is 'NA'.</text>
          </description>
        </leaf>
        <leaf name="session-user">
          <type name="string"/>
          <description>
            <text>User name associated with this session.</text>
          </description>
        </leaf>
        <leaf name="session-type">
          <type name="ioa-common:session-type"/>
          <description>
            <text>Session type.</text>
          </description>
        </leaf>
        <leaf name="session-protocol">
          <type name="ioa-common:session-protocol"/>
          <description>
            <text>Indicates which protocol has been used to establish the session.</text>
          </description>
        </leaf>
        <leaf name="created-time">
          <type name="yang:date-and-time"/>
          <description>
            <text>The timestamp the user has created this session.</text>
          </description>
        </leaf>
        <leaf name="local-ip-address">
          <type name="inet:ip-address"/>
          <description>
            <text>Local ip address of the session</text>
          </description>
        </leaf>
        <leaf name="dial-out-server-name">
          <type name="leafref">
            <path value="../../../protocols/dial-out-server/name"/>
          </type>
          <config value="false"/>
          <description>
            <text>Name of the dial-out-server associated with this session.</text>
          </description>
        </leaf>
      </list>
      <list name="aaa-server">
        <key value="server-name"/>
        <unique tag="server-priority"/>
        <description>
          <text>Configuration of AAA servers - RADIUS or TACACS+.</text>
        </description>
        <leaf name="server-name">
          <type name="ioa-common:object-name">
            <length value="1..32"/>
          </type>
          <description>
            <text>specify the name of aaa server.</text>
          </description>
        </leaf>
        <leaf name="server-priority">
          <type name="uint32">
            <range value="1..10"/>
          </type>
          <mandatory value="true"/>
          <description>
            <text>This is used to sort the servers in the order of precedence.</text>
          </description>
        </leaf>
        <leaf name="protocol-supported">
          <type name="enumeration">
            <enum name="TACACSPLUS">
              <value value="1"/>
            </enum>
            <enum name="RADIUS">
              <value value="2"/>
            </enum>
          </type>
          <mandatory value="true"/>
          <description>
            <text>specify the protocol used for AAA.</text>
          </description>
        </leaf>
        <leaf name="server-address">
          <type name="ioa-common:host"/>
          <mandatory value="true"/>
          <description>
            <text>The IP address of AAA server.</text>
          </description>
        </leaf>
        <leaf name="server-port">
          <when condition="../protocol-supported = 'TACACSPLUS'"/>
          <type name="inet:port-number"/>
          <default value="49"/>
          <description>
            <text>AAA server port number.</text>
          </description>
        </leaf>
        <leaf name="server-port-authentication">
          <when condition="../protocol-supported = 'RADIUS'"/>
          <type name="inet:port-number"/>
          <default value="1812"/>
          <description>
            <text>AAA server authentication port number.</text>
          </description>
        </leaf>
        <leaf name="server-port-accounting">
          <when condition="../protocol-supported = 'RADIUS'"/>
          <type name="inet:port-number"/>
          <default value="1813"/>
          <description>
            <text>AAA server accounting port number.</text>
          </description>
        </leaf>
        <leaf name="shared-secret">
          <type name="ioa-common:password">
            <length value="0..128"/>
          </type>
          <default value="sharedkey"/>
          <description>
            <text>The shared secret of the aaa server. The shared secret will be displayed as *.</text>
          </description>
        </leaf>
        <leaf name="role-supported">
          <type name="bits">
            <bit name="authentication">
              <position value="0"/>
            </bit>
            <bit name="authorization">
              <position value="1"/>
            </bit>
            <bit name="accounting">
              <position value="2"/>
            </bit>
          </type>
          <default value="authentication authorization accounting"/>
          <description>
            <text>The configured roles for the AAA server.</text>
          </description>
        </leaf>
        <leaf name="enabled">
          <type name="boolean"/>
          <default value="true"/>
          <description>
            <text>Enable switch for this aaa-server.</text>
          </description>
        </leaf>
        <leaf name="timeout">
          <type name="uint16">
            <range value="1..90"/>
          </type>
          <units name="seconds"/>
          <default value="5"/>
          <description>
            <text>Specifies the response timeout of Access-Request messages sent to a AAA server in seconds.</text>
          </description>
        </leaf>
        <leaf name="retry">
          <type name="uint8">
            <range value="0..5"/>
          </type>
          <default value="3"/>
          <description>
            <text>Specifies the number of attempted Access-Request messages to a single AAA server before failing authentication.</text>
          </description>
        </leaf>
        <leaf name="source-ip">
          <when condition="../protocol-supported = 'RADIUS'"/>
          <type name="union">
            <type name="enumeration">
              <enum name="auto">
                <value value="0"/>
              </enum>
            </type>
            <type name="inet:ipv4-address"/>
            <type name="inet:ipv6-address"/>
          </type>
          <default value="auto"/>
          <description>
            <text>Source IP address used for RADIUS communications.</text>
          </description>
        </leaf>
        <leaf name="common-password">
          <when condition="../protocol-supported = 'RADIUS'"/>
          <type name="ioa-common:password">
            <length value="0..128"/>
          </type>
          <description>
            <text>Password used for RADIUS authorization after SSH public key authentication.
If blank, username is reused as password for RADIUS authorization.</text>
          </description>
        </leaf>
      </list>
      <uses name="ioa-image-key:image-keys"/>
      <uses name="ioa-image-key:key-replacement-package"/>
      <uses name="ioa-cert:certificates"/>
      <uses name="ioa-ike:ikev2"/>
    </container>
  </grouping>
</module>
