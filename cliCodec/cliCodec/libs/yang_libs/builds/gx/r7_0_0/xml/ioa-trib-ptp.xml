<?xml version="1.0" encoding="UTF-8"?>
<module name="ioa-trib-ptp"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:ioa-trib="http://infinera.com/yang/ioa/trib-ptp"
        xmlns:ioa-fac-common="http://infinera.com/yang/ioa/facilities-common"
        xmlns:ioa-common="http://infinera.com/yang/ioa/common">
  <namespace uri="http://infinera.com/yang/ioa/trib-ptp"/>
  <prefix value="ioa-trib"/>
  <import module="ioa-facilities-common">
    <prefix value="ioa-fac-common"/>
  </import>
  <import module="ioa-common">
    <prefix value="ioa-common"/>
  </import>
  <organization>
    <text>Infinera</text>
  </organization>
  <contact>
    <text>Infinera Technical Support &lt;techsupport@infinera.com&gt;</text>
  </contact>
  <description>
    <text>IOA YANG model describing the tributary client physical termination layer which exists between the
transceiver equipment and the immediate protocol layer (Ethernet, SONET/SDH, OTUk, ...).
This entity provides all physical layer configurations that are applicable to the upper-layer client.</text>
  </description>
  <revision date="2022-10-31">
    <description>
      <text>YANG Models for Infinera Open API (IOA) for release R6.0</text>
    </description>
  </revision>
  <revision date="2022-06-30">
    <description>
      <text>YANG Models for Infinera Open API (IOA) for release R5.2</text>
    </description>
  </revision>
  <revision date="2021-12-10">
    <description>
      <text>YANG Models for Infinera Open API (IOA) for release R5.0</text>
    </description>
  </revision>
  <revision date="2021-06-01">
    <description>
      <text>YANG Models for Infinera Open API (IOA) for release R4.0</text>
    </description>
  </revision>
  <grouping name="trib-ptp">
    <list name="trib-ptp">
      <key value="name"/>
      <description>
        <text>Basic TribPTP facility.</text>
      </description>
      <uses name="ioa-fac-common:facilities-common-attributes"/>
      <uses name="ioa-fac-common:auto-in-service"/>
      <leaf name="service-type">
        <type name="enumeration">
          <enum name="100GBE">
            <value value="1"/>
          </enum>
          <enum name="400GBE">
            <value value="3"/>
          </enum>
          <enum name="OTU4">
            <value value="4"/>
          </enum>
          <enum name="4x100GBE">
            <value value="5"/>
          </enum>
          <enum name="OTU2">
            <value value="6"/>
          </enum>
          <enum name="OTU2e">
            <value value="7"/>
          </enum>
          <enum name="1GBE">
            <value value="8"/>
          </enum>
          <enum name="10GBE">
            <value value="9"/>
          </enum>
          <enum name="OC48">
            <value value="10"/>
          </enum>
          <enum name="OC192">
            <value value="11"/>
          </enum>
          <enum name="STM16">
            <value value="12"/>
          </enum>
          <enum name="STM64">
            <value value="13"/>
          </enum>
          <enum name="4x10G">
            <value value="14"/>
          </enum>
          <enum name="4x10GBE">
            <value value="15"/>
          </enum>
          <enum name="2x100GBE">
            <value value="16"/>
          </enum>
          <enum name="FC1G">
            <value value="17"/>
          </enum>
          <enum name="FC4G">
            <value value="18"/>
          </enum>
          <enum name="FC8G">
            <value value="19"/>
          </enum>
          <enum name="FC16G">
            <value value="20"/>
          </enum>
          <enum name="FC32G">
            <value value="21"/>
          </enum>
          <enum name="FC2G">
            <value value="22"/>
          </enum>
          <enum name="STM1">
            <value value="23"/>
          </enum>
          <enum name="STM4">
            <value value="24"/>
          </enum>
          <enum name="OC3">
            <value value="25"/>
          </enum>
          <enum name="OC12">
            <value value="26"/>
          </enum>
          <enum name="interlaken">
            <value value="27"/>
          </enum>
          <enum name="4x16G">
            <value value="28"/>
          </enum>
          <enum name="4x8G">
            <value value="29"/>
          </enum>
          <enum name="2x32G">
            <value value="30"/>
          </enum>
          <enum name="not-applicable">
            <value value="100"/>
          </enum>
        </type>
        <default value="not-applicable"/>
        <description>
          <text>The protocol type of the client that is being transported via the tributary optical transceiver module (TOM).</text>
        </description>
      </leaf>
      <leaf name="tributary-disable-action">
        <type name="ioa-fac-common:disable-action"/>
        <default value="laser-shut-off"/>
        <description>
          <text>Tributary Disable Action (TDA) indicates what action the NE performs towards the client equipment
(connected over the TOM) when a line-side failure is observed. This includes shutting off laser
or inserting a appropriate replacement signal.</text>
        </description>
      </leaf>
      <leaf name="tributary-disable-holdoff-timer">
        <type name="uint16">
          <range value="0..10000"/>
        </type>
        <units name="milliseconds"/>
        <default value="0"/>
        <description>
          <text>The hold off time of client shutdown or replacement signal at egress direction.
0 means holdoff functionality disabled</text>
        </description>
      </leaf>
      <leaf name="near-end-tda">
        <type name="ioa-common:enable-switch"/>
        <default value="disabled"/>
        <description>
          <text>The switching of near end TDA.</text>
        </description>
      </leaf>
      <leaf name="tda-degrade-mode">
        <type name="ioa-common:enable-switch"/>
        <default value="disabled"/>
        <description>
          <text>The switching of defect BERSD-ODU trig ALS</text>
        </description>
      </leaf>
      <leaf name="forward-defect-trigger">
        <type name="boolean"/>
        <default value="true"/>
        <description>
          <text>Forward Defect TDA Trigger indicates on the egress, if NE receives a client forward defect
(e.g., LF, ODU-AIS) whether to let it flow through towards the line side (network side) or
trigger an egress TDA action</text>
        </description>
        <reference>
          <text>GX-539</text>
        </reference>
      </leaf>
      <uses name="ioa-fac-common:power-threshold"/>
      <uses name="ioa-common:circuit-id"/>
    </list>
  </grouping>
</module>
