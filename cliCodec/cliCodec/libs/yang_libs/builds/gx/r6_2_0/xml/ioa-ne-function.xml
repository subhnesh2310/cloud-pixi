<?xml version="1.0" encoding="UTF-8"?>
<module name="ioa-ne-function"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:ioa-ne-function="http://infinera.com/yang/ioa/ne-function"
        xmlns:ioa-common="http://infinera.com/yang/ioa/common"
        xmlns:ioa-l0="http://infinera.com/yang/ioa/l0">
  <namespace uri="http://infinera.com/yang/ioa/ne-function"/>
  <prefix value="ioa-ne-function"/>
  <import module="ioa-common">
    <prefix value="ioa-common"/>
  </import>
  <import module="ioa-l0">
    <prefix value="ioa-l0"/>
  </import>
  <organization>
    <text>Infinera</text>
  </organization>
  <contact>
    <text>Infinera Technical Support &lt;techsupport@infinera.com&gt;</text>
  </contact>
  <description>
    <text>IOA YANG definitions for common NE functions.</text>
  </description>
  <revision date="2022-10-31">
    <description>
      <text>YANG Models for Infinera Open API (IOA) for release R6.0</text>
    </description>
  </revision>
  <grouping name="ne-function-common-attributes">
    <description>
      <text>Common attributes that are applicable to all ne-function(s).</text>
    </description>
    <leaf name="name">
      <type name="ioa-common:object-name"/>
      <description>
        <text>Non-configurable name: derived from chass/slot and degree.</text>
      </description>
    </leaf>
    <leaf name="supporting-card">
      <type name="leafref">
        <path value="../../../equipment/card/name"/>
      </type>
      <config value="false"/>
      <description>
        <text>Card that holds this </text>
      </description>
    </leaf>
    <leaf-list name="supporting-input-port">
      <type name="leafref">
        <path value="../../../equipment/card/port/name"/>
      </type>
      <config value="false"/>
      <max-elements value="4"/>
      <description>
        <text>Rx (input) Port that hold this object</text>
      </description>
    </leaf-list>
    <leaf-list name="supporting-output-port">
      <type name="leafref">
        <path value="../../../equipment/card/port/name"/>
      </type>
      <config value="false"/>
      <max-elements value="4"/>
      <description>
        <text>Tx (output) Port that hold this object</text>
      </description>
    </leaf-list>
    <uses name="ioa-common:aid"/>
    <uses name="ioa-common:common-states"/>
    <uses name="ioa-common:label"/>
  </grouping>
  <grouping name="ne-composition">
    <list name="degree">
      <when condition="/ne/node-type='OADM'"/>
      <key value="degree-number"/>
      <description>
        <text>List of NE Degrees.</text>
      </description>
      <leaf name="degree-number">
        <type name="uint16">
          <range value="1..20"/>
        </type>
        <description>
          <text>Degree number should be greater than zero and not greater than max-degrees.</text>
        </description>
      </leaf>
      <uses name="ioa-common:label"/>
      <leaf name="slot-width-granularity">
        <type name="ioa-l0:frequency-MHz"/>
        <default value="6250"/>
        <config value="false"/>
        <description>
          <text>Width of a slot (measured in GHz).</text>
        </description>
      </leaf>
      <leaf name="center-freq-granularity">
        <type name="ioa-l0:frequency-MHz"/>
        <default value="3125"/>
        <config value="false"/>
        <description>
          <text>Granularity of allowed center frequencies.
The base frequency for this computation is 193.1 THz (G.694.1).
</text>
        </description>
      </leaf>
      <leaf name="min-slots">
        <type name="uint32"/>
        <default value="8"/>
        <config value="false"/>
        <description>
          <text>Minimum number of slots permitted to be joined together to form a media channel.
Must be less than or equal to the max-slots.</text>
        </description>
      </leaf>
      <leaf name="max-slots">
        <type name="uint32"/>
        <default value="32"/>
        <config value="false"/>
        <description>
          <text>Maximum number of slots permitted to be joined together to form a media channel.
Must be greater than or equal to the min-slots.
</text>
        </description>
      </leaf>
      <list name="connection-ports">
        <key value="index"/>
        <config value="false"/>
        <description>
          <text>Port associated with degree: One if bi-directional; two if uni-directional.
Min. and max. elements in the list is 1 in R6.0</text>
        </description>
        <leaf name="index">
          <type name="uint32">
            <range value="1..2"/>
          </type>
          <description>
            <text>Always 1 in GX (since dwdm-line ports are bi-directional).</text>
          </description>
        </leaf>
        <leaf name="port-name">
          <type name="instance-identifier"/>
          <mandatory value="true"/>
          <description>
            <text>The dwdm-line port of RDxx or ILAx card.
As a consequence, OMS of the corresponding dwdm-port is created.</text>
          </description>
        </leaf>
      </list>
      <list name="modules-degree">
        <key value="index"/>
        <description>
          <text>List of cards/ subcards/ modules involved in degree: modules listed here must be listed as 'possibleDegrees'.</text>
        </description>
        <leaf name="index">
          <type name="uint8">
            <range value="1"/>
          </type>
          <description>
            <text>Card with index 1 should be the card/ subcard/ module fibered to the Degree(s).</text>
          </description>
        </leaf>
        <leaf name="supported-card">
          <type name="instance-identifier"/>
          <mandatory value="true"/>
          <description>
            <text>Instance of card or subcard that belongs to degree.</text>
          </description>
        </leaf>
      </list>
    </list>
    <list name="adg">
      <when condition="/ne/node-type='OADM'">
        <description>
          <text>Only of relevance for OADM Node Types</text>
        </description>
      </when>
      <key value="adg-number"/>
      <description>
        <text>List of ADGs - Add/ Drop Group(s)</text>
      </description>
      <leaf name="adg-number">
        <type name="uint8">
          <range value="1..110"/>
        </type>
        <description>
          <text>ADG identifier as a number.</text>
        </description>
      </leaf>
      <uses name="ioa-common:label"/>
      <leaf name="max-add-drop-ports">
        <type name="uint16"/>
        <config value="false"/>
        <description>
          <text>The max number of ports available for a given ADG.</text>
        </description>
      </leaf>
      <leaf name="wavelength-duplication">
        <type name="enumeration">
          <enum name="one-per-adg">
            <value value="1"/>
            <description>
              <text>No duplication of frequencies in the ADG</text>
            </description>
          </enum>
          <enum name="one-per-degree">
            <value value="2"/>
            <description>
              <text>CDC: duplication of frequencies allowed in the ADG, but only one at the Degree</text>
            </description>
          </enum>
        </type>
        <config value="false"/>
        <description>
          <text>Whether the SRG can handle duplicate wavelengths and if so to what extent.</text>
        </description>
      </leaf>
      <list name="modules-adg">
        <key value="index"/>
        <description>
          <text>List of cards/ subcards/ modules involved in ADG, for informational purposes.</text>
        </description>
        <leaf name="index">
          <type name="uint8">
            <range value="1..4"/>
          </type>
          <description>
            <text>Card with index 1 should be the card/ subcard/ module fibered to the Degree(s).</text>
          </description>
        </leaf>
        <leaf name="supported-card">
          <type name="instance-identifier"/>
          <mandatory value="true"/>
          <description>
            <text>Instance of the card for the ADG.</text>
          </description>
        </leaf>
      </list>
    </list>
  </grouping>
</module>
